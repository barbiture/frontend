/*
LESS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: @icon-home-width;
}

The large array-like variables contain all information about a single icon
@icon-home: x y offset_x offset_y width height total_width total_height image_path name;

At the bottom of this section, we provide information about the spritesheet itself
@spritesheet: width height image @spritesheet-sprites;
*/
@s-add-1: 0px 0px 0px 0px 384px 300px 1152px 900px '../icons/sprite.png' s-add-1;
@s-add-2: 384px 0px -384px 0px 384px 300px 1152px 900px '../icons/sprite.png' s-add-2;
@s-add-3: 0px 300px 0px -300px 384px 300px 1152px 900px '../icons/sprite.png' s-add-3;
@s-add: 384px 300px -384px -300px 384px 300px 1152px 900px '../icons/sprite.png' s-add;
@s-agenda: 768px 0px -768px 0px 384px 300px 1152px 900px '../icons/sprite.png' s-agenda;
@s-alarm-1: 768px 300px -768px -300px 384px 300px 1152px 900px '../icons/sprite.png' s-alarm-1;
@s-alarm-clock-1: 0px 600px 0px -600px 384px 300px 1152px 900px '../icons/sprite.png' s-alarm-clock-1;
/*
@spritesheet: 1152px 900px '../icons/sprite.png' @spritesheet-sprites;
*/
/*
The provided classes are intended to be used with the array-like variables

.icon-home {
  .sprite-width(@icon-home);
}
.icon-email {
  .sprite(@icon-email);
}
*/
.sprite-width(@sprite) {
  width: extract(@sprite, 5);
}

.sprite-height(@sprite) {
  height: extract(@sprite, 6);
}

.sprite-position(@sprite) {
  @sprite-offset-x: extract(@sprite, 3);
  @sprite-offset-y: extract(@sprite, 4);
  background-position: @sprite-offset-x @sprite-offset-y;
}

.sprite-image(@sprite) {
  @sprite-image: extract(@sprite, 9);
  @sprite-image-bare: ~`"@{sprite-image}".slice(1, -1)`;
  background-image: url(@sprite-image-bare);
}

.sprite(@sprite) {
  .sprite-image(@sprite);
  .sprite-position(@sprite);
  .sprite-width(@sprite);
  .sprite-height(@sprite);
}

/*
The `.sprites` mixin generates identical output to the CSS template
  but can be overridden inside of LESS

.sprites(@spritesheet-sprites);
*/
.sprites(@sprites, @i: 1) when (@i <= length(@sprites)) {
  @sprite: extract(@sprites, @i);
  @sprite-name: extract(@sprite, 10);
  .@{sprite-name} {
    .sprite(@sprite);
  }
  .sprites(@sprites, @i + 1);
}
